name: docker-build

on:
  push:
    branches:
      - main


jobs:
  build:
    name: build

    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    strategy:
      matrix:
        arch:
          - amd64
          - arm64
        distro:
          - debian
        include:
          - distro: debian
            distro_version: bookwarm-slim
            tag: bookwarm-slim
            latest: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create tag
        id: create_tag
        run: |-
          IMAGE=ghcr.io/${{ github.repository }}/${{ matrix.distro }}-${{ matrix.arch }}
          TAG=${IMAGE}:${{ matrix.tag }}
          LATEST_TAG=${IMAGE}:latest
          if [ "${{ matrix.latest }}" == "true" ]; then
            echo "tags=${TAG}:${LATEST_TAG}" >> $GITHUB_OUTPUT
          else
            echo "tags=${TAG}" >> $GITHUB_OUTPUT
          fi

      - name: Build and push Docker images
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./image/${{ matrix.distro }}/Dockerfile
          platforms: linux/${{ matrix.arch }}
          build-args: |
            DISTRO_VERSION=${{ matrix.distro_version }}
          tags: ${{ steps.create_tag.outputs.tags }}
          # push: true

      # - name: Generate artifact attestation
      #   uses: actions/attest-build-provenance@v1
      #   with:
      #     subject-name: ghcr.io/${{ github.repository }}/${{ matrix.distro }}:${{ matrix.tag }}-${{ matrix.arch }}
      #     subject-digest: ${{ steps.push.outputs.digest }}
      #     push-to-registry: true